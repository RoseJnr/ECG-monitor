{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_line_chart = _resolveComponent(\"line-chart\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_line_chart, {\n    chartData: _ctx.datacollection,\n    options: _ctx.options\n  }, null, 8 /* PROPS */, [\"chartData\", \"options\"])]);\n}","map":{"version":3,"names":["_createElementBlock","_createVNode","_component_line_chart","chartData","_ctx","datacollection","options"],"sources":["C:\\Users\\roose\\Documents\\TCC\\ServerVue\\socketio-vue\\src\\components\\ECGChart.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <line-chart :chartData=\"datacollection\" :options=\"options\"></line-chart>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { Line } from 'vue-chartjs';\r\nimport { Chart as ChartJS, Title, Tooltip, Legend, LineElement, CategoryScale, LinearScale, PointElement } from 'chart.js';\r\nimport { defineComponent } from 'vue';\r\n\r\nChartJS.register(Title, Tooltip, Legend, LineElement, CategoryScale, LinearScale, PointElement);\r\n\r\nexport default defineComponent({\r\n  name: 'LineChart',\r\n  components: {\r\n    LineChart: Line\r\n  },\r\n  props: {\r\n    chartData: {\r\n      type: Object,\r\n      required: true\r\n    }\r\n  },\r\n  setup() {\r\n    const options = {\r\n      responsive: true,\r\n      maintainAspectRatio: false\r\n    };\r\n\r\n    return {\r\n      options\r\n    };\r\n  }\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n</style>\r\n"],"mappings":";;;uBACEA,mBAAA,CAEM,cADJC,YAAA,CAAwEC,qBAAA;IAA3DC,SAAS,EAAEC,IAAA,CAAAC,cAAc;IAAGC,OAAO,EAAEF,IAAA,CAAAE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}