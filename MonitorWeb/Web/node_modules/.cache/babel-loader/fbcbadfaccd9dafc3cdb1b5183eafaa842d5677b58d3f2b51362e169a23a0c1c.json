{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_line_chart = _resolveComponent(\"line-chart\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_line_chart, {\n    \"chart-data\": _ctx.datacollection\n  }, null, 8 /* PROPS */, [\"chart-data\"])]);\n}","map":{"version":3,"names":["_createElementBlock","_createVNode","_component_line_chart","_ctx","datacollection"],"sources":["C:\\Users\\roose\\Documents\\TCC\\ServerVue\\socketio-vue\\src\\components\\ECGChart.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <line-chart :chart-data=\"datacollection\"></line-chart>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { Line } from 'vue-chartjs';\r\nimport { reactiveProp } from 'vue-chartjs';\r\n\r\nexport default {\r\n  extends: Line,\r\n  mixins: [reactiveProp],\r\n  props: {\r\n    chartData: {\r\n      type: Object,\r\n      required: true\r\n    }\r\n  },\r\n  mounted() {\r\n    this.renderChart(this.chartData, { responsive: true, maintainAspectRatio: false });\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n</style>\r\n"],"mappings":";;;uBACEA,mBAAA,CAEM,cADJC,YAAA,CAAsDC,qBAAA;IAAzC,YAAU,EAAEC,IAAA,CAAAC;EAAc,wC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}