{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport SocketioService from './services/socketio.service.js';\nimport ECGChart from './components/ECGChart.vue';\nexport default {\n  name: 'App',\n  components: {\n    ECGChart\n  },\n  data() {\n    return {\n      datacollection: {\n        labels: [],\n        datasets: [{\n          label: 'ECG Data',\n          backgroundColor: '#f87979',\n          borderColor: '#f87979',\n          data: []\n        }]\n      }\n    };\n  },\n  created() {\n    SocketioService.setupSocketConnection();\n    SocketioService.socket.on('ecg-data', data => {\n      console.log('Data received from ESP32:', data); // Adicione esta linha\n      this.esp32Data = data;\n    });\n  },\n  methods: {\n    updateChartData(data) {\n      if (this.datacollection && this.datacollection.labels && this.datacollection.datasets) {\n        this.datacollection.labels.push(new Date(data.timestamp).toLocaleTimeString());\n        this.datacollection.datasets[0].data.push(data.value);\n\n        // Keep only the last 20 points in the chart to keep it readable\n        if (this.datacollection.labels.length > 20) {\n          this.datacollection.labels.shift();\n          this.datacollection.datasets[0].data.shift();\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["SocketioService","ECGChart","name","components","data","datacollection","labels","datasets","label","backgroundColor","borderColor","created","setupSocketConnection","socket","on","console","log","esp32Data","methods","updateChartData","push","Date","timestamp","toLocaleTimeString","value","length","shift"],"sources":["C:\\Users\\roose\\Documents\\TCC\\ServerVue\\socketio-vue\\src\\App.vue"],"sourcesContent":["<!-- src/App.vue -->\n<template>\n  <div id=\"app\">\n    <ECGChart :ecgData=\"datacollection\"></ECGChart>\n    <!-- <div v-if=\"ecgData\">\n      <h2>Data from ESP32:</h2>\n      <p>Timestamp: {{ ecgData.timestamp }}</p>\n      <p>Value: {{ ecgData.value }}</p>\n    </div> -->\n  </div>\n</template>\n\n<script>\nimport SocketioService from './services/socketio.service.js';\nimport ECGChart from './components/ECGChart.vue';\n\nexport default {\n  name: 'App',\n  components: {\n    ECGChart\n  },\n  data() {\n    return {\n      datacollection: {\n        labels: [],\n        datasets: [\n          {\n            label: 'ECG Data',\n            backgroundColor: '#f87979',\n            borderColor: '#f87979',\n            data: []\n          }\n        ]\n      }\n    };\n  },\n  created() {\n    SocketioService.setupSocketConnection();\n    SocketioService.socket.on('ecg-data', (data) => {\n      console.log('Data received from ESP32:', data); // Adicione esta linha\n      this.esp32Data = data;\n    });\n  },\n  methods: {\n    updateChartData(data) {\n      if (this.datacollection && this.datacollection.labels && this.datacollection.datasets) {\n        this.datacollection.labels.push(new Date(data.timestamp).toLocaleTimeString());\n        this.datacollection.datasets[0].data.push(data.value);\n\n        // Keep only the last 20 points in the chart to keep it readable\n        if (this.datacollection.labels.length > 20) {\n          this.datacollection.labels.shift();\n          this.datacollection.datasets[0].data.shift();\n        }\n      }\n    }\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n"],"mappings":";AAaA,OAAOA,eAAc,MAAO,gCAAgC;AAC5D,OAAOC,QAAO,MAAO,2BAA2B;AAEhD,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,UAAU,EAAE;IACVF;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,cAAc,EAAE;QACdC,MAAM,EAAE,EAAE;QACVC,QAAQ,EAAE,CACR;UACEC,KAAK,EAAE,UAAU;UACjBC,eAAe,EAAE,SAAS;UAC1BC,WAAW,EAAE,SAAS;UACtBN,IAAI,EAAE;QACR;MAEJ;IACF,CAAC;EACH,CAAC;EACDO,OAAOA,CAAA,EAAG;IACRX,eAAe,CAACY,qBAAqB,CAAC,CAAC;IACvCZ,eAAe,CAACa,MAAM,CAACC,EAAE,CAAC,UAAU,EAAGV,IAAI,IAAK;MAC9CW,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEZ,IAAI,CAAC,EAAE;MAChD,IAAI,CAACa,SAAQ,GAAIb,IAAI;IACvB,CAAC,CAAC;EACJ,CAAC;EACDc,OAAO,EAAE;IACPC,eAAeA,CAACf,IAAI,EAAE;MACpB,IAAI,IAAI,CAACC,cAAa,IAAK,IAAI,CAACA,cAAc,CAACC,MAAK,IAAK,IAAI,CAACD,cAAc,CAACE,QAAQ,EAAE;QACrF,IAAI,CAACF,cAAc,CAACC,MAAM,CAACc,IAAI,CAAC,IAAIC,IAAI,CAACjB,IAAI,CAACkB,SAAS,CAAC,CAACC,kBAAkB,CAAC,CAAC,CAAC;QAC9E,IAAI,CAAClB,cAAc,CAACE,QAAQ,CAAC,CAAC,CAAC,CAACH,IAAI,CAACgB,IAAI,CAAChB,IAAI,CAACoB,KAAK,CAAC;;QAErD;QACA,IAAI,IAAI,CAACnB,cAAc,CAACC,MAAM,CAACmB,MAAK,GAAI,EAAE,EAAE;UAC1C,IAAI,CAACpB,cAAc,CAACC,MAAM,CAACoB,KAAK,CAAC,CAAC;UAClC,IAAI,CAACrB,cAAc,CAACE,QAAQ,CAAC,CAAC,CAAC,CAACH,IAAI,CAACsB,KAAK,CAAC,CAAC;QAC9C;MACF;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}